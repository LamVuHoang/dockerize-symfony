version: '3.8'
services:
  # BACKEND
  nginx_symfony:
    build:
      context: .
      dockerfile: docker/nginx_symfony/Dockerfile
    ports:
      - '8000:80'
    volumes:
      - ./backend:/var/www/html
      - ./docker/nginx_symfony/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - postgres

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - ./backend:/var/www/html:delegated

  console:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - ./backend:/var/www/html
    entrypoint: ['php', '/var/www/html/bin/console']

  composer:
    build:
      context: ./docker
      dockerfile: composer/Dockerfile
    volumes:
      - ./backend:/var/www/html

  # FRONTEND
  # nginx_react:
  #   build:
  #     context: .
  #     dockerfile: docker/nginx_react/Dockerfile
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - ./frontend:/var/www/html
  #     - ./docker/nginx_react/nginx.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - node

  # node:
  #   build: 
  #     context: .
  #     dockerfile: docker/node/Dockerfile
  #   volumes:
  #     - ./frontend:/var/www/html:delegated

  # npm:
  #   build: 
  #     context: .
  #     dockerfile: docker/node/Dockerfile
  #   entrypoint: ['npm']
  #   volumes:
  #     - ./frontend:/var/www/html

  # npx:
  #   build: 
  #     context: .
  #     dockerfile: docker/node/Dockerfile
  #   entrypoint: ['npx']
  #   volumes:
  #     - ./frontend:/var/www/html
  
  postgres:
    image: postgres:latest
    env_file:
      - ./.env
    volumes:
      - data:/var/lib/postgresql/data

  
volumes:
  data: